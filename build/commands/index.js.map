{"version":3,"sources":["../components/header.js","../components/topic.js","../components/branch.js","../components/readme.js","../components/complete.js","index.js"],"names":["Header","parseRepos","repos","parse","data","forEach","repo","name","includes","label","split","push","Select","handleSelect","topics","setTopics","loading","setLoading","getTopics","baseUrl","axios","get","map","value","Branch","topic","handleHighlight","branches","setBranches","getBranches","back","length","BACK","Readme","branch","md","setMd","getReadme","readme","Complete","Index","step","setStep","index","payload","complete","setComplete","handleTopic","handleBranchHighlight","originPayload","pop","handleBranch","command","execCmd","cmd","exec","require","Promise","resolve","reject","error","stdout","stderr","console","warn","folder","scripts","process","exit"],"mappings":"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","file":"index.js","sourceRoot":"../../commands","sourcesContent":["import React from 'react';\nimport Gradient from 'ink-gradient';\nimport BigText from 'ink-big-text';\n\nconst Header = () => {\n\treturn (\n\t\t<Gradient name=\"pastel\">\n\t\t\t<BigText text=\"FW-CLI\" />\n\t\t</Gradient>\n\t);\n};\n\nexport default Header;\n","import React, { useState, useEffect } from 'react';\nimport { Box, Color } from 'ink';\nimport axios from 'axios';\nimport SelectInput from 'ink-select-input';\nimport Spinner from 'ink-spinner';\nimport Divider from 'ink-divider';\n\nconst parseRepos = (repos) => {\n\tconst parse = 'fw-testing-';\n\tconst data = [];\n\trepos.forEach((repo) => {\n\t\tif (repo.name.includes(parse)) {\n\t\t\trepo.label = repo.name.split(parse)[1];\n\t\t\tdata.push(repo);\n\t\t}\n\t});\n\treturn data;\n};\n\nconst Select = ({ handleSelect }) => {\n\tconst [topics, setTopics] = useState([]);\n\tconst [loading, setLoading] = useState(true);\n\tuseEffect(() => {\n\t\t/**\n\t\t * \t{\n\t\t\t\t\"name\": \"master\",\n\t\t\t\t\"commit\": {\n\t\t\t\t\"sha\": \"b71ca551ba164f5f049eeafd8bbd0605c1325227\",\n\t\t\t\t\"url\": \"https://api.github.com/repos/kentcdodds/testing-node-apps/commits/b71ca551ba164f5f049eeafd8bbd0605c1325227\"\n\t\t\t\t},\n\t\t\t\t\"protected\": false\n \t\t\t },\n\t\t */\n\t\tasync function getTopics() {\n\t\t\tconst baseUrl = 'https://api.github.com/orgs/fw-hackathon/repos';\n\t\t\tconst { data } = await axios.get(baseUrl);\n\t\t\t/**\n\t\t\t * {\n\t\t\t\tlabel: 'First',\n\t\t\t\tvalue: 'first',\n\t\t\t\t},\n\t\t\t */\n\t\t\tconst topics = parseRepos(data).map(({ name, label }) => ({\n\t\t\t\tlabel,\n\t\t\t\tvalue: name,\n\t\t\t}));\n\t\t\tsetTopics(topics);\n\t\t\tsetLoading(false);\n\t\t}\n\t\tgetTopics();\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<Box>\n\t\t\t\t🚀 Welcome to the tutorial, please select which topic you want to learn.\n\t\t\t</Box>\n\t\t\t<Divider title={''} padding={2} />\n\t\t\t{loading && (\n\t\t\t\t<>\n\t\t\t\t\t<Color green>\n\t\t\t\t\t\t<Spinner type=\"dots\" />\n\t\t\t\t\t</Color>\n\t\t\t\t\t{' Fetching'}\n\t\t\t\t</>\n\t\t\t)}\n\t\t\t<SelectInput items={topics} onSelect={handleSelect} />\n\t\t</>\n\t);\n};\n\nexport default Select;\n","import React, { useState, useEffect } from 'react';\nimport { Box, Color, Text } from 'ink';\nimport axios from 'axios';\nimport SelectInput from 'ink-select-input';\nimport Spinner from 'ink-spinner';\nimport Divider from 'ink-divider';\n\nconst Branch = ({ topic, handleSelect, handleHighlight }) => {\n\tconst [branches, setBranches] = useState([]);\n\tconst [loading, setLoading] = useState(true);\n\tuseEffect(() => {\n\t\t/**\n\t\t * \t{\n\t\t\t\t\"name\": \"master\",\n\t\t\t\t\"commit\": {\n\t\t\t\t\"sha\": \"b71ca551ba164f5f049eeafd8bbd0605c1325227\",\n\t\t\t\t\"url\": \"https://api.github.com/repos/kentcdodds/testing-node-apps/commits/b71ca551ba164f5f049eeafd8bbd0605c1325227\"\n\t\t\t\t},\n\t\t\t\t\"protected\": false\n \t\t\t },\n\t\t */\n\t\tasync function getBranches() {\n\t\t\tconst baseUrl = `https://api.github.com/repos/fw-hackathon/${topic}/branches`;\n\t\t\tconst { data } = await axios.get(baseUrl);\n\n\t\t\t/**\n\t\t\t * {\n\t\t\t\tlabel: 'First',\n\t\t\t\tvalue: 'first',\n\t\t\t\t},\n\t\t\t */\n\t\t\tconst branches = data.map(({ name }) => ({ label: name, value: name }));\n\t\t\tconst back = { label: '⏮  back to topics', value: 'back' };\n\t\t\tsetBranches([...branches, back]);\n\t\t\tsetLoading(false);\n\t\t}\n\t\tgetBranches();\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<Box>💰 Please select which lesson you want to start challenging.</Box>\n\t\t\t<Divider title={''} padding={2} />\n\t\t\t{loading && (\n\t\t\t\t<>\n\t\t\t\t\t<Color green>\n\t\t\t\t\t\t<Spinner type=\"dots\" />\n\t\t\t\t\t</Color>\n\t\t\t\t\t{' Fetching'}\n\t\t\t\t</>\n\t\t\t)}\n\t\t\t{branches.length === 1 && (\n\t\t\t\t<Box>\n\t\t\t\t\t<Color red>No Lesson Yet...</Color>\n\t\t\t\t\t<Text>please go back to topics</Text>\n\t\t\t\t</Box>\n\t\t\t)}\n\t\t\t<SelectInput\n\t\t\t\titems={branches}\n\t\t\t\tonSelect={handleSelect}\n\t\t\t\tonHighlight={handleHighlight}\n\t\t\t/>\n\t\t</>\n\t);\n};\n\nexport default Branch;\n","import React, { useState, useEffect } from 'react';\nimport Markdown from 'ink-markdown';\nimport axios from 'axios';\nimport Divider from 'ink-divider';\n\nconst BACK = 'back';\n\nconst Readme = ({ topic, branch }) => {\n\tconst [md, setMd] = useState('');\n\n\tuseEffect(() => {\n\t\tasync function getReadme() {\n\t\t\tconst readme = await axios.get(\n\t\t\t\t`https://raw.githubusercontent.com/fw-hackathon/${topic}/${branch}/README.md`\n\t\t\t);\n\t\t\tsetMd(readme.data);\n\t\t}\n\t\tif (branch === BACK) {\n\t\t\tsetMd('');\n\t\t\treturn;\n\t\t}\n\t\tif (topic && branch) {\n\t\t\tgetReadme();\n\t\t}\n\t}, [branch]);\n\treturn (\n\t\t<>\n\t\t\t<Divider title={''} padding={2} />\n\t\t\t<Markdown>{md}</Markdown>\n\t\t</>\n\t);\n};\n\nexport default Readme;\n","import React from 'react';\nimport Ascii from 'ink-ascii';\n\nconst Complete = () => {\n\treturn (\n\t\t<Ascii\n\t\t\tfont=\"Big Money-nw\"\n\t\t\thorizontalLayout=\"default\"\n\t\t\tverticalLayout=\"default\"\n\t\t\ttext=\"Go !\"\n\t\t/>\n\t);\n};\n\nexport default Complete;\n","import React, { useState } from 'react';\nimport Spinner from 'ink-spinner';\nimport { Color } from 'ink';\n\n/** Components */\nimport Header from '../components/header';\nimport Topic from '../components/topic';\nimport Branch from '../components/branch';\nimport Readme from '../components/readme';\nimport Complete from '../components/complete';\n\nconst Index = () => {\n\tconst [step, setStep] = useState({ index: 0, payload: [] });\n\tconst [loading, setLoading] = useState(false);\n\tconst [complete, setComplete] = useState(false);\n\n\t// go back\n\tconst back = () => {\n\t\t// let payload = [...step.payload];\n\t\t// payload.pop();\n\t\t// payload.pop();\n\t\t// setStep({ index: step.index - 2, payload });\n\t\tsetStep({ index: 0, payload: [] });\n\t};\n\n\t// step 0\n\tconst handleTopic = (topic) => {\n\t\tconst { value } = topic;\n\t\tsetStep({ index: 1, payload: [...step.payload, value] });\n\t};\n\n\t// step 1\n\tconst handleBranchHighlight = (branch) => {\n\t\tconst { value } = branch;\n\t\tif (step.payload.length === 1) {\n\t\t\tsetStep({ index: 2, payload: [...step.payload, value] });\n\t\t} else if (step.payload.length === 2) {\n\t\t\tconst originPayload = [...step.payload];\n\t\t\toriginPayload.pop();\n\t\t\tsetStep({ index: 2, payload: [...originPayload, value] });\n\t\t}\n\t};\n\n\t// step 2\n\tconst handleBranch = async (branch) => {\n\t\tconst { value } = branch;\n\t\tif (value === 'back') {\n\t\t\tback();\n\t\t\treturn;\n\t\t}\n\t\tsetStep({ index: 3, payload: step.payload });\n\t\t// checkout branch\n\t\tawait command();\n\t};\n\n\t/**\n\t * Executes a shell command and return it as a Promise.\n\t * @param cmd {string}\n\t * @return {Promise<string>}\n\t */\n\tfunction execCmd(cmd) {\n\t\tconst exec = require('child_process').exec;\n\t\treturn new Promise((resolve, reject) => {\n\t\t\texec(cmd, (error, stdout, stderr) => {\n\t\t\t\tif (error) {\n\t\t\t\t\tconsole.warn(error);\n\t\t\t\t\treject(error);\n\t\t\t\t}\n\t\t\t\tresolve(stdout ? stdout : stderr);\n\t\t\t});\n\t\t});\n\t}\n\n\tconst command = async () => {\n\t\tconst baseUrl = `https://github.com/fw-hackathon/${step.payload[0]}`;\n\t\tconst folder = `./${step.payload[0]}`;\n\n\t\tconst scripts = [\n\t\t\t`rm -rf ${folder}`,\n\t\t\t`git clone --single-branch --branch ${step.payload[1]} ${baseUrl}`,\n\t\t\t`npm install --prefix ${folder}`,\n\t\t];\n\n\t\tsetLoading(true);\n\t\tawait execCmd(scripts[0]);\n\t\tawait execCmd(scripts[1]);\n\t\tawait execCmd(scripts[2]);\n\t\tsetComplete(true);\n\t\tprocess.exit();\n\t};\n\n\tif (complete) {\n\t\treturn <Complete />;\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Header />\n\t\t\t{step.index === 0 && <Topic handleSelect={handleTopic} />}\n\t\t\t{(step.index === 1 || step.index === 2) && (\n\t\t\t\t<>\n\t\t\t\t\t<Branch\n\t\t\t\t\t\ttopic={step.payload[0]}\n\t\t\t\t\t\thandleSelect={handleBranch}\n\t\t\t\t\t\thandleHighlight={handleBranchHighlight}\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t)}\n\t\t\t{step.index === 2 && (\n\t\t\t\t<Readme topic={step.payload[0]} branch={step.payload[1]} />\n\t\t\t)}\n\t\t\t{loading && (\n\t\t\t\t<>\n\t\t\t\t\t<Color green>\n\t\t\t\t\t\t<Spinner type=\"dots\" />\n\t\t\t\t\t</Color>\n\t\t\t\t\t{' Installing...'}\n\t\t\t\t</>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default Index;\n"]}